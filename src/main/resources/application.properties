#==== connect to mysql ======#
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=
##spring.datasource.url=jdbc:mysql://35.200.129.153:3306/rif?useSSL=false
##spring.datasource.username=root
##spring.datasource.password=rifadmin
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



spring.datasource.url = jdbc:postgresql://ec2-23-21-197-231.compute-1.amazonaws.com:5432/dff18rsp5388d8?sslmode=require&user=rkxpbphfwiyqmj&password=f73186deaab7cb0306cbd6d3d76c5cf3379ab0a5426e98134e56222e9b5b3444
server.port=${PORT:8080}
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect

spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect